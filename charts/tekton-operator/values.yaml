## Default values.yaml for tekton-operator Helm chart

## Override the full name of this Helm release
nameOverride: ""

## Choose between the vanilla Kubernetes flavor and the Openshift flavor of this Helm chart
## Container images, RBAC resources and operator settings will be adjusted automatically,
## unless explicitly overridden by a Helm value.
openshift:
  enabled: false

## If the Tekton-operator CRDs should automatically be installed and upgraded
## Setting this to true will cause a cascade deletion of all Tekton resources when you uninstall the chart - danger!
installCRDs: true

## Control the creation of RBAC resources (Serviceaccount, Role, ClusterRole, ClusterRoleBinding)
rbac:
  create: true
  # Annotations to add to the RBAC resources
  annotations: {}
  serviceAccount:
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

## Configuration for the tekton-operator pod
operator:
  # Internal name of the operator. Default value depends on the flavor (k8s/openshift).
  operatorName: ""
  image:
    # Container image for Tekton operator. Default value depends on the flavor (k8s/openshift).
    repository: "hyperledgerk8s/tektoncd-operator"
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  autoInstallComponents: false
  # The namespace in which Tekton components should be deployed
  # Defaults to "tekton-pipelines" for Kubernetes and to "openshift-pipelines" for Openshift flavor.
  defaultTargetNamespace: ""
  # Log level of the operator
  logLevel: info
  # Resource requests and limits for the operator pod
  # see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources: {}

## Configuration for the tekton-operator-webhook pod
webhook:
  image:
    # Container image for Tekton operator webhook. Default value depends on the flavor (k8s/openshift).
    repository: "hyperledgerk8s/tekton-operator-webhook"
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  certSecret:
    name: ""
    useExistingSecret: ""
  # Log level of the webhook
  logLevel: info
  # Resource requests and limits for the operator pod
  # see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources: {}

webhookProxy:
  image:
    repository: "hyperledgerk8s/tekton-operator-proxy-webhook"
    tag: ""

## The webhook is exposed with a service, which can also be used to scrape metrics.
service:
  # Enable auto-discovery by Prometheus, requires the ServiceMonitor.monitoring.coreos.com CR
  createServiceMonitor: false
  metricsDomain: tekton.dev/operator

## If container images are hosted in a private registry, set pull secrets.
## Secrets must be manually created in the namespace.
## see https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

## Annotations to be added to all pods deployed by this chart.
podAnnotations: {}

## Specify privileges for the pods
## see https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

## Settings for controlling the placement of all pods deployed by this chart.
## see https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
nodeSelector: {}
tolerations: []
affinity: {}

pipeline:
  job:
    pruner_tkn:
      image: "hyperledgerk8s/tekton-job-pruner-tkn:025de221fb05" # gcr.io/tekton-releases/dogfooding/tkn@sha256:025de221fb059ca24a3b2d988889ea34bce48dc76c0cf0d6b4499edb8c21325f
  controller:
    image: "hyperledgerk8s/tekton-pipeline-controller:v0.42.0"
  resolvers:
    image: "hyperledgerk8s/tekton-pipeline-resolvers:v0.42.0"
  webhook:
    image: "hyperledgerk8s/tekton-pipeline-webhook:v0.42.0"
  args:
    entrypointImage: "hyperledgerk8s/tekton-pipeline-args-entrypoint:v0.42.0"
    gitImage: "hyperledgerk8s/tekton-pipeline-args-git-init:v0.42.0"
    kubeconfigWriterImage: "hyperledgerk8s/tekton-pipeline-args-kubeconfigwriter:v0.42.0"
    nopImage: "hyperledgerk8s/tekton-pipeline-args-nop:v0.42.0"
    imagedigestexporterImage: "hyperledgerk8s/tekton-pipeline-args-imagedigestexporter:v0.42.0"
    pullrequestInitImage: "hyperledgerk8s/tekton-pipeline-args-pullrequest-init:v0.42.0"
    workingdirinitImage: "hyperledgerk8s/tekton-pipeline-args-workingdirinit:v0.42.0"
    cloudSdkImage: "hyperledgerk8s/tekton-pipeline-args-cloud-sdk:27b2c2"
    busyboxImage: "hyperledgerk8s/tekton-pipeline-args-busybox:19f022"
    powershellImage: "hyperledgerk8s/tekton-pipeline-args-powershell:nanoserver-b6d5ff"

dashboard:
  image: "hyperledgerk8s/tekton-dashboard:v0.31.0"

triggers:
  controller:
    image: "hyperledgerk8s/tekton-triggers-controller:v0.22.0"
  webhook:
    image: "hyperledgerk8s/tekton-triggers-webhook:v0.22.0"
  interceptors:
    image: "hyperledgerk8s/tekton-triggers-interceptors:v0.22.0"
